service:
  name: nodejs-aws-be
app: products-retrieve-service
org: alekseibulgakstudy
frameworkVersion: '2'

plugins:
  - serverless-webpack
  - serverless-dotenv-plugin

provider:
  name: aws
  runtime: nodejs12.x
  region: ${opt:region, self:custom.region}
  
  environment:
    DB_URL: ${env:DB_URL}
    DB_PORT: ${env:DB_PORT}
    DB_USERNAME: ${env:DB_USERNAME}
    DB_PASSWORD: ${env:DB_PASSWORD}
    REGION: ${opt:region, self:custom.region}

    SQS_TOPIC: catalogItemsQueue
    SNS_TOPIC: !Ref createProductTopic
  

  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "sqs:*"
      Resource: 
        - Fn::GetAtt:
            - catalogItemsQueue
            - Arn
    - Effect: "Allow"
      Action:
        - "sns:*"
      Resource: 
        - !Ref createProductTopic

custom:
  region: eu-west-1
  dotenv:
    exclude:
      - AWS_ACCESS_KEY_ID
      - AWS_SECRET_ACCESS_KEY

functions:
  getAllProducts:
    handler: handler.getAllProducts
    events:
      - http:
          path: products
          method: get
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
            allowCredentials: false
      
  getProductById:
    handler: handler.getProductById
    events:
      - http:
          method: get
          path: products/{id}
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
            allowCredentials: false
          request:
            parameters:
              paths:
                id: true
  addProduct:
    handler: handler.postProduct
    events:
      - http:
          method: post
          path: products
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
            allowCredentials: false

  catalogBatchProcess:
    handler: handler.catalogBatchProcess
    events:
      - sqs:
          batchSize: 5
          arn:
            Fn::GetAtt:
              - catalogItemsQueue
              - Arn

resources:
  Resources:
    catalogItemsQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: catalogItemsQueue
    createProductTopic:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: createProductTopic
    createProductTopicSubscription:
      Type: AWS::SNS::Subscription
      Properties:
        Protocol: email
        Endpoint: aleksei.bulgak@gmail.com
        TopicArn : !Ref 'createProductTopic'
        FilterPolicy:
          owner:
            - manager
    createProductTopicSubscription2:
      Type: AWS::SNS::Subscription
      Properties:
        Protocol: email
        Endpoint: bulgak.aleksei@yandex.ru
        TopicArn : !Ref 'createProductTopic'
        FilterPolicy:
          owner:
            - developer
  Outputs:
    createProductTopic:
      Value: !Ref createProductTopic
      Export:
        Name: createProductTopic
    catalogItemsQueue:
      Value: 
        Fn::GetAtt:
                - catalogItemsQueue
                - Arn
      Export:
        Name: catalogItemsQueue